// Copyright (c) 2010, Lawrence Livermore National Security, LLC. Produced at
// the Lawrence Livermore National Laboratory. LLNL-CODE-443211. All Rights
// reserved. See file COPYRIGHT for details.
//
// This file is part of the MFEM library. For more information and source code
// availability see http://mfem.org.
//
// MFEM is free software; you can redistribute it and/or modify it under the
// terms of the GNU Lesser General Public License (as published by the Free
// Software Foundation) version 2.1 dated February 1999.

/*
  ---[ Defines Known At Compile-Time ]------------
  TILESIZE : Tilesize for iterating over entries
  ================================================
*/

kernel void ExtractSubVector(const int entries,
                             const int * restrict indices,
                             const double * restrict in,
                             double * restrict out) {

  for (int i = 0; i < entries; ++i; tile(TILESIZE)) {
    if (i < entries) {
      out[i] = in[indices[i]];
    }
  }
}

kernel void SetSubVector(const int entries,
                         const int * restrict indices,
                         const double * restrict in,
                         double * restrict out) {

  for (int i = 0; i < entries; ++i; tile(TILESIZE)) {
    if (i < entries) {
      out[indices[i]] = in[i];
    }
  }
}

kernel void MapSubVector(const int entries,
                         const int * restrict indices,
                         const double * restrict in,
                         double * restrict out) {

  for (int i = 0; i < entries; ++i; tile(TILESIZE)) {
    if (i < entries) {
      const int fromIdx = indices[2*i + 0];
      const int toIdx   = indices[2*i + 1];
      out[toIdx] = in[fromIdx];
    }
  }
}